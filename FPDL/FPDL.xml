<?xml version="1.0"?>
<doc>
    <assembly>
        <name>FPDL</name>
    </assembly>
    <members>
        <member name="T:FPDL.Common.ConfigMgmt">
            <summary>
            FPDL ConfigMgmt type
            </summary>
        </member>
        <member name="P:FPDL.Common.ConfigMgmt.SecurityOwner">
            <summary>
            National owner
            </summary>
        </member>
        <member name="P:FPDL.Common.ConfigMgmt.SecurityClassification">
            <summary>
            Classification
            </summary>
        </member>
        <member name="P:FPDL.Common.ConfigMgmt.CurrentVersion">
            <summary>
            Current version
            </summary>
        </member>
        <member name="F:FPDL.Common.ConfigMgmt.Description">
            <summary>
            Document description
            </summary>
        </member>
        <member name="P:FPDL.Common.ConfigMgmt.Created">
            <summary>
            Creation data
            </summary>
        </member>
        <member name="P:FPDL.Common.ConfigMgmt.DocReference">
            <summary>
            Document reference
            </summary>
        </member>
        <member name="P:FPDL.Common.ConfigMgmt.Changed">
            <summary>
            Changes
            </summary>
        </member>
        <member name="M:FPDL.Common.ConfigMgmt.#ctor">
            <summary>
            Construct ConfigMgmt object
            </summary>
        </member>
        <member name="M:FPDL.Common.ConfigMgmt.#ctor(System.Xml.Linq.XElement)">
            <summary>
            Construct ConfigMgmt object from FPDL
            </summary>
            <param name="fpdl"></param>
        </member>
        <member name="M:FPDL.Common.ConfigMgmt.FromFPDL(System.Xml.Linq.XElement)">
            <summary>
            Deserialise ConfigMgmt object from FPDL
            </summary>
            <param name="fpdl"></param>
        </member>
        <member name="M:FPDL.Common.ConfigMgmt.ToFPDL">
            <summary>
            Serialise ConfigMgmt object to FPDL
            </summary>
            <returns></returns>
        </member>
        <member name="M:FPDL.Common.ConfigMgmt.Initialise(System.String,System.Int32,System.Int32,System.String,System.String,System.String)">
            <summary>
            Initialise a ConfigMgmt object
            </summary>
            <param name="author">Athor name</param>
            <param name="Major">Major version number</param>
            <param name="Minor">Minor version number</param>
            <param name="changeNotes">Change notes</param>
            <param name="owner">National owner</param>
            <param name="classification">Classification</param>
            <exception cref="T:System.ApplicationException">Attempt to initialise an initialised configMgmt entry</exception>
        </member>
        <member name="M:FPDL.Common.ConfigMgmt.NewVersion(System.String,System.Int32,System.Int32,System.String)">
            <summary>
            Issue a new version of a document
            </summary>
            <param name="author">Author name</param>
            <param name="Major">Major version number</param>
            <param name="Minor">Minor version number</param>
            <param name="changeNotes">Change notes</param>
        </member>
        <member name="M:FPDL.Common.ConfigMgmt.ToString">
            <summary>
            String representation of a ConfigMgmt object
            </summary>
            <returns></returns>
        </member>
        <member name="T:FPDL.Common.ConfigMgmt.created">
            <summary>
            Created type
            </summary>
        </member>
        <member name="F:FPDL.Common.ConfigMgmt.created.date">
            <summary>
            Creation data
            </summary>
        </member>
        <member name="F:FPDL.Common.ConfigMgmt.created.author">
            <summary>
            Author
            </summary>
        </member>
        <member name="F:FPDL.Common.ConfigMgmt.created.initialVersion">
            <summary>
            First version number
            </summary>
        </member>
        <member name="M:FPDL.Common.ConfigMgmt.created.ToString">
            <summary>
            String representation of Created type
            </summary>
            <returns></returns>
        </member>
        <member name="T:FPDL.Common.ConfigMgmt.changed">
            <summary>
            Changed type
            </summary>
        </member>
        <member name="F:FPDL.Common.ConfigMgmt.changed.date">
            <summary>
            Date of change
            </summary>
        </member>
        <member name="F:FPDL.Common.ConfigMgmt.changed.author">
            <summary>
            Author
            </summary>
        </member>
        <member name="F:FPDL.Common.ConfigMgmt.changed.newVersion">
            <summary>
            New version number
            </summary>
        </member>
        <member name="F:FPDL.Common.ConfigMgmt.changed.prevDocReference">
            <summary>
            Reference of the last version
            </summary>
        </member>
        <member name="F:FPDL.Common.ConfigMgmt.changed.changeNotes">
            <summary>
            Change notes
            </summary>
        </member>
        <member name="M:FPDL.Common.ConfigMgmt.changed.ToString">
            <summary>
            String representation of a Changed type
            </summary>
            <returns></returns>
        </member>
        <member name="M:FPDL.Common.ConfigMgmt.VersionFromString(System.String)">
            <summary>
            Create version from string
            </summary>
            <param name="value">Version string</param>
            <returns>Version tuple</returns>
        </member>
        <member name="M:FPDL.Common.ConfigMgmt.VersionToString(System.Tuple{System.Int32,System.Int32})">
            <summary>
            Create string from version tuple
            </summary>
            <param name="version">Version tuple</param>
            <returns>Version string</returns>
        </member>
        <member name="T:FPDL.Common.HlaAttribute">
            <summary>
            HLA Attribute
            </summary>
        </member>
        <member name="F:FPDL.Common.HlaAttribute.Name">
            <summary>
            Attribute Name
            </summary>
        </member>
        <member name="F:FPDL.Common.HlaAttribute.DataType">
            <summary>
            Attribute data type (optional)
            </summary>
        </member>
        <member name="F:FPDL.Common.HlaAttribute.DefaultValue">
            <summary>
            Attribute default value (optional)
            </summary>
        </member>
        <member name="M:FPDL.Common.HlaAttribute.ToString">
            <summary>
            String representation of HLA Attribute
            </summary>
            <returns></returns>
        </member>
        <member name="T:FPDL.Common.HlaInteraction">
            <summary>
            HLA interaction 
            </summary>
        </member>
        <member name="F:FPDL.Common.HlaInteraction.InteractionClassName">
            <summary>
            Interaction class name
            </summary>
        </member>
        <member name="F:FPDL.Common.HlaInteraction.Parameters">
            <summary>
            Interaction parameters
            </summary>
        </member>
        <member name="M:FPDL.Common.HlaInteraction.#ctor">
            <summary>
            Construct an HlaInteraction object
            </summary>
        </member>
        <member name="M:FPDL.Common.HlaInteraction.FromFPDL(System.Xml.Linq.XElement)">
            <summary>
            Construct an HlaInteraction object from FPDL
            </summary>
            <param name="fpdl"></param>
            <returns></returns>
        </member>
        <member name="M:FPDL.Common.HlaInteraction.ToFPDL">
            <summary>
            Serialise HLA interaction into FPDL
            </summary>
            <returns>FPDL HLA interaction</returns>
        </member>
        <member name="M:FPDL.Common.HlaInteraction.ToString">
            <summary>
            String representation of an HLA Interaction
            </summary>
            <returns></returns>
        </member>
        <member name="T:FPDL.Common.HlaObject">
            <summary>
            HLA object 
            </summary>
        </member>
        <member name="F:FPDL.Common.HlaObject.ObjectClassName">
            <summary>
            Object class name
            </summary>
        </member>
        <member name="F:FPDL.Common.HlaObject.Attributes">
            <summary>
            Object attributes
            </summary>
        </member>
        <member name="M:FPDL.Common.HlaObject.#ctor">
            <summary>
            Construct an HlaObject
            </summary>
        </member>
        <member name="M:FPDL.Common.HlaObject.#ctor(System.Xml.Linq.XElement)">
            <summary>
            Construct an HlaObject from FPDL
            </summary>
            <param name="fpdl"></param>
        </member>
        <member name="M:FPDL.Common.HlaObject.FromFPDL(System.Xml.Linq.XElement)">
            <summary>
            Construct an HlaObject from FPDL
            </summary>
            <param name="fpdl"></param>
            <returns></returns>
        </member>
        <member name="M:FPDL.Common.HlaObject.ToFPDL">
            <summary>
            Serialise HlaObject to FPDL
            </summary>
            <returns>FPDL HLA object</returns>
        </member>
        <member name="M:FPDL.Common.HlaObject.ToString">
            <summary>
            String representation of HlaObject
            </summary>
            <returns></returns>
        </member>
        <member name="T:FPDL.Common.HlaParameter">
            <summary>
            HLA Parameter
            </summary>
        </member>
        <member name="F:FPDL.Common.HlaParameter.ParameterName">
            <summary>
            Parameter name
            </summary>
        </member>
        <member name="F:FPDL.Common.HlaParameter.DataType">
            <summary>
            Parameter data type (optional)
            </summary>
        </member>
        <member name="F:FPDL.Common.HlaParameter.DefaultValue">
            <summary>
            Parameter default value (optional)
            </summary>
        </member>
        <member name="M:FPDL.Common.HlaParameter.ToString">
            <summary>
            String representation of HLA Parameter
            </summary>
            <returns></returns>
        </member>
        <member name="T:FPDL.Common.Source">
            <summary>
            FPDL sourceType
            </summary>
        </member>
        <member name="T:FPDL.Common.Source.Type">
            <summary>
            Source type
            </summary>
        </member>
        <member name="F:FPDL.Common.Source.Type.Federate">
            <summary>
            Federate source
            </summary>
        </member>
        <member name="F:FPDL.Common.Source.Type.Entity">
            <summary>
            Entity source
            </summary>
        </member>
        <member name="P:FPDL.Common.Source.SourceType">
            <summary>
            Source type
            </summary>
        </member>
        <member name="P:FPDL.Common.Source.SourceId">
            <summary>
            ID of source
            </summary>
        </member>
        <member name="F:FPDL.Common.Source.FilterSource">
            <summary>
            True if this Source refers to a filter
            </summary>
        </member>
        <member name="P:FPDL.Common.Source.Objects">
            <summary>
            HLA objects (read only)
            </summary>
        </member>
        <member name="P:FPDL.Common.Source.Interactions">
            <summary>
            HLA interactions (read only)
            </summary>
        </member>
        <member name="M:FPDL.Common.Source.#ctor">
            <summary>
            Construct Source object
            </summary>
        </member>
        <member name="M:FPDL.Common.Source.#ctor(System.Xml.Linq.XElement)">
            <summary>
            Construct a Source object from FPDL
            </summary>
            <param name="fpdl"></param>
        </member>
        <member name="M:FPDL.Common.Source.SetSubscribeSource(FPDL.Common.Source.Type,System.String)">
            <summary>
            Set the identity of the subscription source
            </summary>
            <param name="source">Federate or Entity</param>
            <param name="id">Identity</param>
            <exception cref="T:System.ApplicationException">If source is Entity and name is not a GUID</exception>
        </member>
        <member name="M:FPDL.Common.Source.FromFPDL(System.Xml.Linq.XElement)">
            <summary>
            Deserialise Source object from FPDL
            </summary>
            <param name="fpdl"></param>
        </member>
        <member name="M:FPDL.Common.Source.ToFPDL">
            <summary>
            Serialise Source to FPDL
            </summary>
            <returns></returns>
        </member>
        <member name="M:FPDL.Common.Source.ToString">
            <summary>
            String representation of source
            </summary>
            <returns></returns>
        </member>
        <member name="T:FPDL.Common.Enums">
            <summary>
            FPDL Schema Enum mappings\n
            NB: The FPDL Schema comvention is for lower case
            </summary>
        </member>
        <member name="T:FPDL.Common.Enums.FederateType">
            <summary>
            System types
            </summary>
        </member>
        <member name="F:FPDL.Common.Enums.FederateType.gateway">
            <summary>
            Gateway
            </summary>
        </member>
        <member name="F:FPDL.Common.Enums.FederateType.filter">
            <summary>
            Filter
            </summary>
        </member>
        <member name="F:FPDL.Common.Enums.FederateType.service">
            <summary>
            Service
            </summary>
        </member>
        <member name="T:FPDL.Common.Enums.GatewayType">
            <summary>
            Gateway Type
            </summary>
        </member>
        <member name="F:FPDL.Common.Enums.GatewayType.NotApplicable">
            <summary>
            Not Applicable
            </summary>
        </member>
        <member name="F:FPDL.Common.Enums.GatewayType.htg">
            <summary>
            HTG
            </summary>
        </member>
        <member name="F:FPDL.Common.Enums.GatewayType.mtg">
            <summary>
            MTG
            </summary>
        </member>
        <member name="F:FPDL.Common.Enums.GatewayType.ltg">
            <summary>
            LTG
            </summary>
        </member>
        <member name="T:FPDL.Common.Enums.ComponentType">
            <summary>
            Component type
            </summary>
        </member>
        <member name="F:FPDL.Common.Enums.ComponentType.proxy">
            <summary>
            Proxy
            </summary>
        </member>
        <member name="F:FPDL.Common.Enums.ComponentType.guard">
            <summary>
            Guard
            </summary>
        </member>
        <member name="F:FPDL.Common.Enums.ComponentType.filter">
            <summary>
            Filter
            </summary>
        </member>
        <member name="T:FPDL.Common.Enums.ModuleType">
            <summary>
            Module type
            </summary>
        </member>
        <member name="F:FPDL.Common.Enums.ModuleType.interface">
            <summary>
            Interface
            </summary>
        </member>
        <member name="F:FPDL.Common.Enums.ModuleType.osp">
            <summary>
            OSP
            </summary>
        </member>
        <member name="F:FPDL.Common.Enums.ModuleType.export">
            <summary>
            Export Policy
            </summary>
        </member>
        <member name="F:FPDL.Common.Enums.ModuleType.import">
            <summary>
            Import Policy
            </summary>
        </member>
        <member name="F:FPDL.Common.Enums.ModuleType.filter">
            <summary>
            Filter
            </summary>
        </member>
        <member name="F:FPDL.Common.Enums.ModuleType.federation">
            <summary>
            Federation
            </summary>
        </member>
        <member name="F:FPDL.Common.Enums.ModuleType.extension">
            <summary>
            Vendor extension
            </summary>
        </member>
        <member name="F:FPDL.Common.Enums.ModuleType.host">
            <summary>
            Host
            </summary>
        </member>
        <member name="T:FPDL.Deploy.Component">
            <summary>
            Deploy Component
            </summary>
        </member>
        <member name="F:FPDL.Deploy.Component.Modules">
            <summary>
            Modules
            </summary>
        </member>
        <member name="F:FPDL.Deploy.Component.ComponentID">
            <summary>
            Component ID
            </summary>
        </member>
        <member name="F:FPDL.Deploy.Component.ComponentType">
            <summary>
            Component Type
            </summary>
        </member>
        <member name="M:FPDL.Deploy.Component.#ctor">
            <summary>
            Construct Component object
            </summary>
        </member>
        <member name="M:FPDL.Deploy.Component.#ctor(System.Xml.Linq.XElement)">
            <summary>
            Construct Component object from FPDL
            </summary>
            <param name="fpdl"></param>
        </member>
        <member name="M:FPDL.Deploy.Component.FromFPDL(System.Xml.Linq.XElement)">
            <summary>
            Deserialise Component from FPDL
            </summary>
            <param name="fpdl"></param>
        </member>
        <member name="M:FPDL.Deploy.Component.ToFPDL">
            <summary>
            Serialise Component to FPDL
            </summary>
            <returns></returns>
        </member>
        <member name="M:FPDL.Deploy.Component.ToString">
            <summary>
            String representation of Component
            </summary>
            <returns></returns>
        </member>
        <member name="T:FPDL.Deploy.DeployObject">
            <summary>
            FPDL Deploy
            </summary>
        </member>
        <member name="F:FPDL.Deploy.DeployObject.ConfigMgmt">
            <summary>
            ConfigMgmt for Deploy document
            </summary>
        </member>
        <member name="F:FPDL.Deploy.DeployObject.DesignReference">
            <summary>
            Reference to the design document
            </summary>
        </member>
        <member name="F:FPDL.Deploy.DeployObject.Systems">
            <summary>
            Systems within Deploy document
            </summary>
        </member>
        <member name="M:FPDL.Deploy.DeployObject.#ctor">
            <summary>
            Construct a DeployObject
            </summary>
        </member>
        <member name="M:FPDL.Deploy.DeployObject.#ctor(System.Xml.Linq.XElement)">
            <summary>
            Construct DeployObject from FPDL
            </summary>
            <param name="fpdl"></param>
        </member>
        <member name="M:FPDL.Deploy.DeployObject.FromFPDL(System.Xml.Linq.XElement)">
            <summary>
            Deserialise DeployObject from FPDL
            </summary>
            <param name="fpdl"></param>
        </member>
        <member name="M:FPDL.Deploy.DeployObject.ToFPDL">
            <summary>
            Serialise DeployObject to FPDL
            </summary>
            <returns></returns>
        </member>
        <member name="M:FPDL.Deploy.DeployObject.ToString">
            <summary>
            String representation of DeployObject
            </summary>
            <returns></returns>
        </member>
        <member name="M:FPDL.Deploy.DeployObject.IsEmpty">
            <summary>
            Returns true if this object is empty
            </summary>
            <returns></returns>
        </member>
        <member name="T:FPDL.Deploy.IModule">
            <summary>
            Common interface for Module types
            </summary>
        </member>
        <member name="M:FPDL.Deploy.IModule.FromFPDL(System.Xml.Linq.XElement)">
            <summary>
            Deserialise module from FPDL
            </summary>
            <param name="fpdl"></param>
        </member>
        <member name="M:FPDL.Deploy.IModule.ToFPDL">
            <summary>
            Serialise module to FPDL
            </summary>
            <returns></returns>
        </member>
        <member name="T:FPDL.Deploy.ModuleExport">
            <summary>
            Export policy module.
            </summary>
        </member>
        <member name="P:FPDL.Deploy.ModuleExport.InterfaceName">
            <summary>
            Interface binding for the policy
            </summary>
        </member>
        <member name="P:FPDL.Deploy.ModuleExport.Sources">
            <summary>
            Sources
            </summary>
        </member>
        <member name="M:FPDL.Deploy.ModuleExport.#ctor">
            <summary>
            Construct Export module
            </summary>
        </member>
        <member name="M:FPDL.Deploy.ModuleExport.#ctor(System.Xml.Linq.XElement)">
            <summary>
            Construct Export module from FPDL
            </summary>
            <param name="fpdl"></param>
        </member>
        <member name="M:FPDL.Deploy.ModuleExport.FromFPDL(System.Xml.Linq.XElement)">
            <summary>
            Deserialise Export module from FPDL
            </summary>
            <param name="fpdl"></param>
        </member>
        <member name="M:FPDL.Deploy.ModuleExport.ToFPDL">
            <summary>
            Serialise Export module to FPDL
            </summary>
            <returns></returns>
        </member>
        <member name="M:FPDL.Deploy.ModuleExport.ToString">
            <summary>
            String representation of Export module
            </summary>
            <returns></returns>
        </member>
        <member name="T:FPDL.Deploy.ModuleExtension">
            <summary>
            Extension Module
            </summary>
        </member>
        <member name="F:FPDL.Deploy.ModuleExtension.VendorName">
            <summary>
            Vendor Name
            </summary>
        </member>
        <member name="F:FPDL.Deploy.ModuleExtension.Parameters">
            <summary>
            Parameters (Key, Value) pairs
            </summary>
        </member>
        <member name="M:FPDL.Deploy.ModuleExtension.#ctor">
            <summary>
            Construct module
            </summary>
        </member>
        <member name="M:FPDL.Deploy.ModuleExtension.#ctor(System.Xml.Linq.XElement)">
            <summary>
            Construct Module from FPDL
            </summary>
            <param name="fpdl"></param>
        </member>
        <member name="M:FPDL.Deploy.ModuleExtension.FromFPDL(System.Xml.Linq.XElement)">
            <summary>
            Deserialise Module from FPDL
            </summary>
            <param name="fpdl"></param>
        </member>
        <member name="M:FPDL.Deploy.ModuleExtension.ToFPDL">
            <summary>
            Serialise Module to FPDL
            </summary>
            <returns></returns>
        </member>
        <member name="M:FPDL.Deploy.ModuleExtension.ToString">
            <summary>
            String representation of Extension module
            </summary>
            <returns></returns>
        </member>
        <member name="T:FPDL.Deploy.ModuleFactory">
            <summary>
            Create a concrete Module instance
            </summary>
        </member>
        <member name="M:FPDL.Deploy.ModuleFactory.Create(System.Xml.Linq.XElement,FPDL.Deploy.Component)">
            <summary>
            Create a concrete Module instance
            </summary>
            <param name="fpdl"></param>
            <param name="component"></param>
        </member>
        <member name="M:FPDL.Deploy.ModuleFactory.Create(FPDL.Common.Enums.ModuleType,FPDL.Deploy.Component)">
            <summary>
            Create a concrete Module instance
            </summary>
            <param name="moduleName"></param>
            <param name="component"></param>
        </member>
        <member name="T:FPDL.Deploy.ModuleFederation">
            <summary>
            Federation Module
            </summary>
        </member>
        <member name="P:FPDL.Deploy.ModuleFederation.FederationName">
            <summary>
            Federation Name
            </summary>
        </member>
        <member name="P:FPDL.Deploy.ModuleFederation.FederateName">
            <summary>
            Federate Name
            </summary>
        </member>
        <member name="P:FPDL.Deploy.ModuleFederation.InterfaceName">
            <summary>
            Interface Binding
            </summary>
        </member>
        <member name="P:FPDL.Deploy.ModuleFederation.RTI">
            <summary>
            RTI specification
            </summary>
        </member>
        <member name="M:FPDL.Deploy.ModuleFederation.#ctor">
            <summary>
            Construct Federation Module
            </summary>
        </member>
        <member name="M:FPDL.Deploy.ModuleFederation.#ctor(System.Xml.Linq.XElement)">
            <summary>
            Construct Federation Module from FPDL
            </summary>
            <param name="fpdl"></param>
        </member>
        <member name="M:FPDL.Deploy.ModuleFederation.FromFPDL(System.Xml.Linq.XElement)">
            <summary>
            Deserialise Module from FPDL
            </summary>
            <param name="fpdl"></param>
        </member>
        <member name="M:FPDL.Deploy.ModuleFederation.ToFPDL">
            <summary>
            Serialise Module to FPDL
            </summary>
            <returns></returns>
        </member>
        <member name="M:FPDL.Deploy.ModuleFederation.ToString">
            <summary>
            String representation of Federation module
            </summary>
            <returns></returns>
        </member>
        <member name="T:FPDL.Deploy.Rti">
            <summary>
            RTI class
            </summary>
        </member>
        <member name="F:FPDL.Deploy.Rti.CrcAddress">
            <summary>
            CRC Address
            </summary>
        </member>
        <member name="F:FPDL.Deploy.Rti.AddressType">
            <summary>
            Address Type
            </summary>
        </member>
        <member name="F:FPDL.Deploy.Rti.CrcPortNumber">
            <summary>
            CRC Port number
            </summary>
        </member>
        <member name="F:FPDL.Deploy.Rti.HlaSpec">
            <summary>
            HLA Specification
            </summary>
        </member>
        <member name="F:FPDL.Deploy.Rti.FomUri">
            <summary>
            URI of FOM modules
            </summary>
        </member>
        <member name="F:FPDL.Deploy.Rti.FomFile">
            <summary>
            Filenames of FOM modules
            </summary>
        </member>
        <member name="T:FPDL.Deploy.ModuleHost">
            <summary>
            Host Module
            </summary>
        </member>
        <member name="F:FPDL.Deploy.ModuleHost.HostName">
            <summary>
            Interface binding for the policy
            </summary>
        </member>
        <member name="F:FPDL.Deploy.ModuleHost.Logging">
            <summary>
            Logging servers
            </summary>
        </member>
        <member name="F:FPDL.Deploy.ModuleHost.Time">
            <summary>
            Time servers
            </summary>
        </member>
        <member name="M:FPDL.Deploy.ModuleHost.#ctor">
            <summary>
            Construct a Host Module
            </summary>
        </member>
        <member name="M:FPDL.Deploy.ModuleHost.#ctor(System.Xml.Linq.XElement)">
            <summary>
            Construct an Interface module from FPDL
            </summary>
            <param name="fpdl"></param>
        </member>
        <member name="M:FPDL.Deploy.ModuleHost.FromFPDL(System.Xml.Linq.XElement)">
            <summary>
            Deserialise Interface module from FPDL
            </summary>
            <param name="fpdl"></param>
        </member>
        <member name="M:FPDL.Deploy.ModuleHost.ToFPDL">
            <summary>
            Serialise Host module to FPDL
            </summary>
            <returns></returns>
        </member>
        <member name="M:FPDL.Deploy.ModuleHost.ToString">
            <summary>
            String representation of Host module
            </summary>
            <returns></returns>
        </member>
        <member name="T:FPDL.Deploy.Server">
            <summary>
            Generic Server description
            </summary>
        </member>
        <member name="F:FPDL.Deploy.Server.Name">
            <summary>
            FQDN or IP address of server
            </summary>
        </member>
        <member name="F:FPDL.Deploy.Server.Protocol">
            <summary>
            Application protocol (eg syslog, NTP, etc
            </summary>
        </member>
        <member name="F:FPDL.Deploy.Server.Transport">
            <summary>
            Transport protocol (TCP, UDP, etc)
            </summary>
        </member>
        <member name="F:FPDL.Deploy.Server.Port">
            <summary>
            Port number
            </summary>
        </member>
        <member name="T:FPDL.Deploy.ModuleImport">
            <summary>
            Import policy module.
            </summary>
        </member>
        <member name="P:FPDL.Deploy.ModuleImport.InterfaceName">
            <summary>
            Interface binding for the policy
            </summary>
        </member>
        <member name="P:FPDL.Deploy.ModuleImport.Objects">
            <summary>
            Objects
            </summary>
        </member>
        <member name="P:FPDL.Deploy.ModuleImport.Interactions">
            <summary>
            Interactions
            </summary>
        </member>
        <member name="M:FPDL.Deploy.ModuleImport.#ctor">
            <summary>
            Construct an Import module
            </summary>
        </member>
        <member name="M:FPDL.Deploy.ModuleImport.#ctor(System.Xml.Linq.XElement)">
            <summary>
            Construct an Import module from FPDL
            </summary>
            <param name="fpdl"></param>
        </member>
        <member name="M:FPDL.Deploy.ModuleImport.FromFPDL(System.Xml.Linq.XElement)">
            <summary>
            Deserialise Import module from FPDL
            </summary>
            <param name="fpdl"></param>
        </member>
        <member name="M:FPDL.Deploy.ModuleImport.ToFPDL">
            <summary>
            Serialise Import module to FPDL
            </summary>
            <returns></returns>
        </member>
        <member name="M:FPDL.Deploy.ModuleImport.ToString">
            <summary>
            String representation of Import module
            </summary>
            <returns></returns>
        </member>
        <member name="T:FPDL.Deploy.ModuleInterface">
            <summary>
            Interface module
            </summary>
        </member>
        <member name="P:FPDL.Deploy.ModuleInterface.InterfaceName">
            <summary>
            Interface binding for the policy
            </summary>
        </member>
        <member name="P:FPDL.Deploy.ModuleInterface.IpAddress">
            <summary>
            IP address
            </summary>
        </member>
        <member name="P:FPDL.Deploy.ModuleInterface.NetPrefix">
            <summary>
            Network prefix
            </summary>
        </member>
        <member name="P:FPDL.Deploy.ModuleInterface.DefaultRouter">
            <summary>
            Default router (optional)
            </summary>
        </member>
        <member name="M:FPDL.Deploy.ModuleInterface.#ctor">
            <summary>
            Construct an Interface module
            </summary>
        </member>
        <member name="M:FPDL.Deploy.ModuleInterface.#ctor(System.Xml.Linq.XElement)">
            <summary>
            Construct an Interface module from FPDL
            </summary>
            <param name="fpdl"></param>
        </member>
        <member name="M:FPDL.Deploy.ModuleInterface.FromFPDL(System.Xml.Linq.XElement)">
            <summary>
            Deserialise Interface module from FPDL
            </summary>
            <param name="fpdl"></param>
        </member>
        <member name="M:FPDL.Deploy.ModuleInterface.ToFPDL">
            <summary>
            Serialise Interface module to FPDL
            </summary>
            <returns></returns>
        </member>
        <member name="M:FPDL.Deploy.ModuleInterface.ToString">
            <summary>
            String representation of Interface module
            </summary>
            <returns></returns>
        </member>
        <member name="T:FPDL.Deploy.ModuleOsp">
            <summary>
            OSP module
            </summary>
        </member>
        <member name="T:FPDL.Deploy.ModuleOsp.OspProtocol">
            <summary>
            OspProtocol types
            </summary>
        </member>
        <member name="F:FPDL.Deploy.ModuleOsp.OspProtocol.HPSD_ZMQ">
            <summary>
            HPSD over ZMQ
            </summary>
        </member>
        <member name="F:FPDL.Deploy.ModuleOsp.OspProtocol.HPSD_TCP">
            <summary>
            HPSD over TCP
            </summary>
        </member>
        <member name="F:FPDL.Deploy.ModuleOsp.OspProtocol.WebLVC_ZMQ">
            <summary>
            WebLVC over ZMQ
            </summary>
        </member>
        <member name="F:FPDL.Deploy.ModuleOsp.OspProtocol.WebLVC_TCP">
            <summary>
            WebLVC over TCP
            </summary>
        </member>
        <member name="F:FPDL.Deploy.ModuleOsp.Path">
            <summary>
            Direction of information flow
            </summary>
        </member>
        <member name="F:FPDL.Deploy.ModuleOsp.Protocol">
            <summary>
            OSP protocol
            </summary>
        </member>
        <member name="F:FPDL.Deploy.ModuleOsp.InputPort">
            <summary>
            Input port (optional)
            </summary>
        </member>
        <member name="F:FPDL.Deploy.ModuleOsp.OutputPort">
            <summary>
            Output port (optional)
            </summary>
        </member>
        <member name="M:FPDL.Deploy.ModuleOsp.#ctor">
            <summary>
            Construct OSP module
            </summary>
        </member>
        <member name="M:FPDL.Deploy.ModuleOsp.#ctor(System.Xml.Linq.XElement)">
            <summary>
            Construct OSP module from FPDL
            </summary>
            <param name="fpdl"></param>
        </member>
        <member name="M:FPDL.Deploy.ModuleOsp.FromFPDL(System.Xml.Linq.XElement)">
            <summary>
            Deserialise OSP module from FPDL
            </summary>
            <param name="fpdl"></param>
        </member>
        <member name="M:FPDL.Deploy.ModuleOsp.ToFPDL">
            <summary>
            Serialise OSP module to FPDL
            </summary>
            <returns></returns>
        </member>
        <member name="M:FPDL.Deploy.ModuleOsp.ToString">
            <summary>
            String representation of OSP module
            </summary>
            <returns></returns>
        </member>
        <member name="T:FPDL.Deploy.System">
            <summary>
            System object
            </summary>
        </member>
        <member name="F:FPDL.Deploy.System.Components">
            <summary>
            Components
            </summary>
        </member>
        <member name="F:FPDL.Deploy.System.SystemType">
            <summary>
            System type
            </summary>
        </member>
        <member name="F:FPDL.Deploy.System.Pattern">
            <summary>
            Pattern name
            </summary>
        </member>
        <member name="F:FPDL.Deploy.System.PatternRef">
            <summary>
            Pattern reference
            </summary>
        </member>
        <member name="M:FPDL.Deploy.System.#ctor">
            <summary>
            Construct System object
            </summary>
        </member>
        <member name="M:FPDL.Deploy.System.#ctor(System.Xml.Linq.XElement)">
            <summary>
            Construct System object from FPDL
            </summary>
            <param name="fpdl"></param>
        </member>
        <member name="M:FPDL.Deploy.System.FromFPDL(System.Xml.Linq.XElement)">
            <summary>
            Deserialise System object from FPDL
            </summary>
            <param name="fpdl"></param>
        </member>
        <member name="M:FPDL.Deploy.System.ToFPDL">
            <summary>
            Serialise System object to FPDL
            </summary>
            <returns></returns>
        </member>
        <member name="M:FPDL.Deploy.System.ToString">
            <summary>
            String representation of System object
            </summary>
            <returns></returns>
        </member>
        <member name="T:FPDL.Deploy.SystemFactory">
            <summary>
            Factory for System objects
            </summary>
        </member>
        <member name="M:FPDL.Deploy.SystemFactory.#ctor">
            <summary>
            Construct a System Factory
            </summary>
        </member>
        <member name="M:FPDL.Deploy.SystemFactory.#ctor(System.Collections.Generic.List{FPDL.Deploy.System},System.Xml.Linq.XElement)">
            <summary>
            Populate a List of systems
            </summary>
            <param name="systems">List to populate</param>
            <param name="fpdl">FPDL Deploy document</param>
        </member>
        <member name="T:FPDL.Design.DesignObject">
            <summary>
            Design object
            </summary>
        </member>
        <member name="F:FPDL.Design.DesignObject.ConfigMgmt">
            <summary>
            ConfigMgmt for the Pattern document
            </summary>
        </member>
        <member name="F:FPDL.Design.DesignObject.Federation">
            <summary>
            Federation Name
            </summary>
        </member>
        <member name="M:FPDL.Design.DesignObject.#ctor">
            <summary>
            Construct DesignObject
            </summary>
        </member>
        <member name="M:FPDL.Design.DesignObject.#ctor(System.Xml.Linq.XElement)">
            <summary>
            Construct DesignObject from FPDL
            </summary>
            <param name="fpdl"></param>
        </member>
        <member name="M:FPDL.Design.DesignObject.FromFPDL(System.Xml.Linq.XElement)">
            <summary>
            Deserialise DesignObject from FPDL
            </summary>
            <param name="fpdl"></param>
        </member>
        <member name="M:FPDL.Design.DesignObject.ToFPDL">
            <summary>
            Serialise PatternObject to FPDL
            </summary>
            <returns></returns>
        </member>
        <member name="M:FPDL.Design.DesignObject.ToString">
            <summary>
            String representation of PatternObject
            </summary>
            <returns></returns>
        </member>
        <member name="T:FPDL.Design.Entity">
            <summary>
            Entity
            </summary>
        </member>
        <member name="F:FPDL.Design.Entity.EntityName">
            <summary>
            Entity friendly name
            </summary>
        </member>
        <member name="F:FPDL.Design.Entity.EntityId">
            <summary>
            Entity ID (NETN ID)
            </summary>
        </member>
        <member name="F:FPDL.Design.Entity.Publish">
            <summary>
            Entity publish
            </summary>
        </member>
        <member name="M:FPDL.Design.Entity.#ctor(System.Xml.Linq.XElement)">
            <summary>
            Construct Entity from FPDL
            </summary>
            <param name="fpdl"></param>
        </member>
        <member name="M:FPDL.Design.Entity.FromFPDL(System.Xml.Linq.XElement)">
            <summary>
            Deserialise Entity from FPDL
            </summary>
            <param name="fpdl"></param>
        </member>
        <member name="M:FPDL.Design.Entity.ToFPDL">
            <summary>
            Serialise Entity object to FPDL
            </summary>
            <returns></returns>
        </member>
        <member name="T:FPDL.Design.Federate">
            <summary>
            Federate
            </summary>
        </member>
        <member name="F:FPDL.Design.Federate.FederateType">
            <summary>
            Federate type
            </summary>
        </member>
        <member name="F:FPDL.Design.Federate.FederateName">
            <summary>
            Federation name
            </summary>
        </member>
        <member name="F:FPDL.Design.Federate.PolicyReference">
            <summary>
            Policy reference
            </summary>
        </member>
        <member name="F:FPDL.Design.Federate.SimulatorName">
            <summary>
            Simulator Name (optional)
            </summary>
        </member>
        <member name="F:FPDL.Design.Federate.GatewayType">
            <summary>
            Gateway Type (optional)
            </summary>
        </member>
        <member name="F:FPDL.Design.Federate.Filter">
            <summary>
            Filter specification (optional)
            </summary>
        </member>
        <member name="F:FPDL.Design.Federate.Sources">
            <summary>
            Federate subscriptions
            </summary>
        </member>
        <member name="F:FPDL.Design.Federate.Publish">
            <summary>
            Federate-level publish
            </summary>
        </member>
        <member name="F:FPDL.Design.Federate.Entities">
            <summary>
            Entity-level publish
            </summary>
        </member>
        <member name="M:FPDL.Design.Federate.#ctor(System.Xml.Linq.XElement)">
            <summary>
            Construct Federation object from FPDL
            </summary>
            <param name="fpdl"></param>
        </member>
        <member name="M:FPDL.Design.Federate.FromFPDL(System.Xml.Linq.XElement)">
            <summary>
            Deserialise Federation object from FPDL
            </summary>
            <param name="fpdl"></param>
        </member>
        <member name="M:FPDL.Design.Federate.ToFPDL">
            <summary>
            Serialise Federation object to FPDL
            </summary>
            <returns></returns>
        </member>
        <member name="M:FPDL.Design.Federate.ToString">
            <summary>
            String representation of Component object
            </summary>
            <returns></returns>
        </member>
        <member name="T:FPDL.Design.Federation">
            <summary>
            Federation
            </summary>
        </member>
        <member name="F:FPDL.Design.Federation.Name">
            <summary>
            Federation name
            </summary>
        </member>
        <member name="F:FPDL.Design.Federation.Summary">
            <summary>
            Federation summary
            </summary>
        </member>
        <member name="F:FPDL.Design.Federation.Scenario">
            <summary>
            URI of MSDL Scenario (optional)
            </summary>
        </member>
        <member name="F:FPDL.Design.Federation.Federates">
            <summary>
            Modules
            </summary>
        </member>
        <member name="M:FPDL.Design.Federation.#ctor(System.Xml.Linq.XElement)">
            <summary>
            Construct Federation object from FPDL
            </summary>
            <param name="fpdl"></param>
        </member>
        <member name="M:FPDL.Design.Federation.FromFPDL(System.Xml.Linq.XElement)">
            <summary>
            Deserialise Federation object from FPDL
            </summary>
            <param name="fpdl"></param>
        </member>
        <member name="M:FPDL.Design.Federation.ToFPDL">
            <summary>
            Serialise Federation object to FPDL
            </summary>
            <returns></returns>
        </member>
        <member name="M:FPDL.Design.Federation.ToString">
            <summary>
            String representation of Component object
            </summary>
            <returns></returns>
        </member>
        <member name="T:FPDL.Design.Filter">
            <summary>
            Filter spec
            </summary>
        </member>
        <member name="M:FPDL.Design.Filter.#ctor(System.Xml.Linq.XElement)">
            <summary>
            Construct Filter object from FPDL
            </summary>
            <param name="xElement"></param>
        </member>
        <member name="M:FPDL.Design.Filter.ToFPDL">
            <summary>
            Serialise to FPDL
            </summary>
            <returns></returns>
        </member>
        <member name="T:FPDL.Design.Publish">
            <summary>
            Federate publish
            </summary>
        </member>
        <member name="F:FPDL.Design.Publish.Objects">
            <summary>
            Objects to publish
            </summary>
        </member>
        <member name="F:FPDL.Design.Publish.Interactions">
            <summary>
            Interactions to publish
            </summary>
        </member>
        <member name="M:FPDL.Design.Publish.#ctor(System.Xml.Linq.XElement)">
            <summary>
            Construct a Publish object from FPDL
            </summary>
            <param name="fpdl"></param>
        </member>
        <member name="M:FPDL.Design.Publish.FromFPDL(System.Xml.Linq.XElement)">
            <summary>
            Deserialise Publish object from FPDL
            </summary>
            <param name="fpdl"></param>
        </member>
        <member name="M:FPDL.Design.Publish.ToFPDL">
            <summary>
            Serialise Publish onject to FPDL
            </summary>
            <returns></returns>
        </member>
        <member name="M:FPDL.Design.Publish.ToString">
            <summary>
            String representation of Module object
            </summary>
            <returns></returns>
        </member>
        <member name="T:FPDL.DeployParser">
            <summary>
            Read a FPDL Deploy document
            </summary>
        </member>
        <member name="M:FPDL.DeployParser.Load(System.Xml.Linq.XDocument)">
            <summary>
            Create a DeployObject from a FPDL Deploy document
            </summary>
            <param name="fpdlDoc"></param>
            <returns></returns>
        </member>
        <member name="M:FPDL.DeployParser.Save(FPDL.Deploy.DeployObject,System.String,System.Boolean)">
            <summary>
            Save a DeployObject to a FPDL Deploy document
            </summary>
            <param name="deploy"></param>
            <param name="filename"></param>
            <param name="overwrite"></param>
        </member>
        <member name="T:FPDL.DesignParser">
            <summary>
            Read a FPDL Design document and create a DesignObject
            </summary>
        </member>
        <member name="M:FPDL.DesignParser.Load(System.Xml.Linq.XDocument)">
            <summary>
            Create a DesignObject from a FPDL Deploy document
            </summary>
            <param name="fpdlDoc"></param>
            <returns></returns>
        </member>
        <member name="M:FPDL.DesignParser.Save(FPDL.Design.DesignObject,System.String,System.Boolean)">
            <summary>
            Save a DesignObject to a FPDL Design document
            </summary>
            <param name="deploy"></param>
            <param name="filename"></param>
            <param name="overwrite"></param>
        </member>
        <member name="T:FPDL.FpdlReader">
            <summary>
            Parser support for all FPDL documents
            </summary>
        </member>
        <member name="M:FPDL.FpdlReader.Parse(System.String)">
            <summary>
            Parse any FPDL document into the appropriate type
            </summary>
            <param name="filename">FPDL file Pathname</param>
            <returns>IFpdlObject</returns>
        </member>
        <member name="M:FPDL.FpdlReader.Parse(System.Xml.Linq.XDocument)">
            <summary>
            Parse any FPDL document into the appropriate type
            </summary>
            <param name="fpdlDoc"></param>
            <returns>IFpdlObject</returns>
        </member>
        <member name="M:FPDL.FpdlReader.Save(FPDL.Deploy.DeployObject,System.String,System.Boolean)">
            <summary>
            Save a DeployObject to a FPDL Deploy document
            </summary>
            <param name="deploy"></param>
            <param name="filename"></param>
            <param name="overwrite"></param>
        </member>
        <member name="T:FPDL.PatternParser">
            <summary>
            FPDL Pattern Parser
            </summary>
        </member>
        <member name="M:FPDL.PatternParser.Load(System.Xml.Linq.XDocument)">
            <summary>
            Create a PatternObject from an FPDL Pattern document
            </summary>
            <param name="fpdlDoc"></param>
            <returns></returns>
        </member>
        <member name="M:FPDL.PatternParser.LoadLibrary(System.Xml.Linq.XDocument)">
            <summary>
            Create a PatternLibrary from a FPDL Pattern Library document
            </summary>
            <param name="fpdlDoc"></param>
            <returns></returns>
        </member>
        <member name="M:FPDL.PatternParser.Save(FPDL.Pattern.PatternObject,System.String,System.Boolean)">
            <summary>
            Save a PatternObject to a FPDL Pattern document
            </summary>
            <param name="pattern"></param>
            <param name="filename"></param>
            <param name="overwrite"></param>
        </member>
        <member name="M:FPDL.PatternParser.Save(FPDL.Pattern.PatternLibrary,System.String,System.Boolean)">
            <summary>
            Save a PatternObject to a FPDL Pattern document
            </summary>
            <param name="library"></param>
            <param name="filename"></param>
            <param name="overwrite"></param>
        </member>
        <member name="T:FPDL.FpdlWriter">
            <summary>
            Write FPDL documents to the filesystem
            </summary>
        </member>
        <member name="M:FPDL.FpdlWriter.Write(FPDL.IFpdlObject,System.String)">
            <summary>
            Write an FPDL Document to the filesystem
            </summary>
            <param name="fpdlObj"></param>
            <param name="filename"></param>
        </member>
        <member name="T:FPDL.IFpdlObject">
            <summary>
            Interface for FPDL *Object classes
            </summary>
        </member>
        <member name="M:FPDL.IFpdlObject.FromFPDL(System.Xml.Linq.XElement)">
            <summary>
            Deserialise object from FPDL document
            </summary>
            <param name="fpdl"></param>
        </member>
        <member name="M:FPDL.IFpdlObject.ToFPDL">
            <summary>
            Serialise object to FPDL document
            </summary>
            <returns></returns>
        </member>
        <member name="T:FPDL.Pattern.Component">
            <summary>
            Component
            </summary>
        </member>
        <member name="F:FPDL.Pattern.Component.ComponentType">
            <summary>
            Component type
            </summary>
        </member>
        <member name="F:FPDL.Pattern.Component.ComponentID">
            <summary>
            Component ID
            </summary>
        </member>
        <member name="F:FPDL.Pattern.Component.Modules">
            <summary>
            Modules
            </summary>
        </member>
        <member name="M:FPDL.Pattern.Component.#ctor(System.Xml.Linq.XElement)">
            <summary>
            Construct Component object from FPDL
            </summary>
            <param name="fpdl"></param>
        </member>
        <member name="M:FPDL.Pattern.Component.FromFPDL(System.Xml.Linq.XElement)">
            <summary>
            Deserialise Component object from FPDL
            </summary>
            <param name="fpdl"></param>
        </member>
        <member name="M:FPDL.Pattern.Component.ToFPDL">
            <summary>
            Serialise Component object to FPDL
            </summary>
            <returns></returns>
        </member>
        <member name="M:FPDL.Pattern.Component.ToString">
            <summary>
            String representation of Component object
            </summary>
            <returns></returns>
        </member>
        <member name="T:FPDL.Pattern.Entry">
            <summary>
            Library entry
            </summary>
        </member>
        <member name="F:FPDL.Pattern.Entry.Embedded">
            <summary>
            Embedded pattern = true
            </summary>
        </member>
        <member name="P:FPDL.Pattern.Entry.Type">
            <summary>
            Pattern type
            </summary>
        </member>
        <member name="P:FPDL.Pattern.Entry.Reference">
            <summary>
            Pattern reference
            </summary>
        </member>
        <member name="P:FPDL.Pattern.Entry.Name">
            <summary>
            Pattern name
            </summary>
        </member>
        <member name="P:FPDL.Pattern.Entry.Version">
            <summary>
            Pattern version
            </summary>
        </member>
        <member name="P:FPDL.Pattern.Entry.Filename">
            <summary>
            Pattern filename (optional)
            </summary>
        </member>
        <member name="P:FPDL.Pattern.Entry.Pattern">
            <summary>
            Pattern object (optional)
            </summary>
        </member>
        <member name="M:FPDL.Pattern.Entry.#ctor">
            <summary>
            Construct Entry object
            </summary>
        </member>
        <member name="T:FPDL.Pattern.Module">
            <summary>
            Pattern Module
            </summary>
        </member>
        <member name="F:FPDL.Pattern.Module.ModuleType">
            <summary>
            Module type
            </summary>
        </member>
        <member name="F:FPDL.Pattern.Module.Specifications">
            <summary>
            Parameter specifications
            </summary>
        </member>
        <member name="M:FPDL.Pattern.Module.#ctor(System.Xml.Linq.XElement)">
            <summary>
            Construct Module object from FPDL
            </summary>
            <param name="fpdl"></param>
        </member>
        <member name="M:FPDL.Pattern.Module.FromFPDL(System.Xml.Linq.XElement)">
            <summary>
            Deserialise Module object from FPDL
            </summary>
            <param name="fpdl"></param>
        </member>
        <member name="M:FPDL.Pattern.Module.ToFPDL">
            <summary>
            Serialise Module object to FPDL
            </summary>
            <returns></returns>
        </member>
        <member name="M:FPDL.Pattern.Module.ToString">
            <summary>
            String representation of Module object
            </summary>
            <returns></returns>
        </member>
        <member name="T:FPDL.Pattern.PatternLibrary">
            <summary>
            Pattern Library
            </summary>
        </member>
        <member name="P:FPDL.Pattern.PatternLibrary.ConfigMgmt">
            <summary>
            ConfigMgmt object for Library document
            </summary>
        </member>
        <member name="P:FPDL.Pattern.PatternLibrary.Library">
            <summary>
            Library
            </summary>
        </member>
        <member name="M:FPDL.Pattern.PatternLibrary.#ctor">
            <summary>
            Construct a Library object
            </summary>
        </member>
        <member name="M:FPDL.Pattern.PatternLibrary.#ctor(System.Xml.Linq.XElement)">
            <summary>
            Construct a Library object from FPDL
            </summary>
            <param name="fpdl"></param>
        </member>
        <member name="M:FPDL.Pattern.PatternLibrary.FromFPDL(System.Xml.Linq.XElement)">
            <summary>
            Deserialise Library object from FPDL
            </summary>
            <param name="fpdl"></param>
        </member>
        <member name="M:FPDL.Pattern.PatternLibrary.ToFPDL">
            <summary>
            Serialise Library to FPDL
            </summary>
            <returns></returns>
        </member>
        <member name="M:FPDL.Pattern.PatternLibrary.Initialise(System.String)">
            <summary>
            Initialise a Library object
            </summary>
            <param name="author"></param>
        </member>
        <member name="M:FPDL.Pattern.PatternLibrary.Add(FPDL.Pattern.PatternObject)">
            <summary>
            Add a Pattern to the Library
            </summary>
            <remarks>Store the Pattern in the library</remarks>
            <param name="pattern"></param>
        </member>
        <member name="M:FPDL.Pattern.PatternLibrary.Add(FPDL.Pattern.PatternObject,System.String)">
            <summary>
            Add a Pattern to the Library
            </summary>
            <remarks>Store the pattern in a file</remarks>
            <param name="pattern"></param>
            <param name="filename"></param>
        </member>
        <member name="M:FPDL.Pattern.PatternLibrary.Add(FPDL.Pattern.PatternObject,System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            Add a Pattern to the Library
            </summary>
            <param name="pattern"></param>
            <param name="author"></param>
            <param name="changeNotes"></param>
            <param name="updateMajor"></param>
            <param name="updateMinor"></param>
        </member>
        <member name="M:FPDL.Pattern.PatternLibrary.Remove(FPDL.Pattern.PatternObject)">
            <summary>
            Remove a Pattern from the Library
            </summary>
            <param name="pattern"></param>
        </member>
        <member name="M:FPDL.Pattern.PatternLibrary.Remove(System.Guid)">
            <summary>
            Remove a Pattern from the Library
            </summary>
            <param name="patternRef"></param>
        </member>
        <member name="T:FPDL.Pattern.PatternObject">
            <summary>
            Pattern
            </summary>
        </member>
        <member name="T:FPDL.Pattern.PatternObject.Type">
            <summary>
            Pattern type
            </summary>
        </member>
        <member name="F:FPDL.Pattern.PatternObject.Type.HTG">
            <summary>
            HTG
            </summary>
        </member>
        <member name="F:FPDL.Pattern.PatternObject.Type.MTG">
            <summary>
            MTG
            </summary>
        </member>
        <member name="F:FPDL.Pattern.PatternObject.Type.LTG">
            <summary>
            LTG
            </summary>
        </member>
        <member name="F:FPDL.Pattern.PatternObject.Type.Filter">
            <summary>
            Filter
            </summary>
        </member>
        <member name="F:FPDL.Pattern.PatternObject.ConfigMgmt">
            <summary>
            ConfigMgmt for the Pattern document
            </summary>
        </member>
        <member name="F:FPDL.Pattern.PatternObject.PatternType">
            <summary>
            Pattern type
            </summary>
        </member>
        <member name="F:FPDL.Pattern.PatternObject.PatternName">
            <summary>
            Pattern name
            </summary>
        </member>
        <member name="F:FPDL.Pattern.PatternObject.Description">
            <summary>
            Description
            </summary>
        </member>
        <member name="F:FPDL.Pattern.PatternObject.Components">
            <summary>
            Components
            </summary>
        </member>
        <member name="M:FPDL.Pattern.PatternObject.#ctor">
            <summary>
            Construct PatternObject
            </summary>
        </member>
        <member name="M:FPDL.Pattern.PatternObject.#ctor(System.Xml.Linq.XElement)">
            <summary>
            Construct Pattern object from FPDL
            </summary>
            <param name="fpdl"></param>
        </member>
        <member name="M:FPDL.Pattern.PatternObject.FromFPDL(System.Xml.Linq.XElement)">
            <summary>
            Deserialise PatternObject from FPDL
            </summary>
            <param name="fpdl"></param>
        </member>
        <member name="M:FPDL.Pattern.PatternObject.ToFPDL">
            <summary>
            Serialise PatternObject to FPDL
            </summary>
            <returns></returns>
        </member>
        <member name="M:FPDL.Pattern.PatternObject.ToString">
            <summary>
            String representation of PatternObject
            </summary>
            <returns></returns>
        </member>
        <member name="T:FPDL.Pattern.Specification">
            <summary>
            Specification
            </summary>
        </member>
        <member name="F:FPDL.Pattern.Specification.ParamName">
            <summary>
            Parameter name
            </summary>
        </member>
        <member name="F:FPDL.Pattern.Specification.Value">
            <summary>
            Value
            </summary>
        </member>
        <member name="F:FPDL.Pattern.Specification.ReadOnly">
            <summary>
            Read only
            </summary>
        </member>
        <member name="M:FPDL.Pattern.Specification.#ctor(System.Xml.Linq.XElement)">
            <summary>
            Construct specification object from FPDL
            </summary>
            <param name="fpdl"></param>
        </member>
        <member name="M:FPDL.Pattern.Specification.FromFPDL(System.Xml.Linq.XElement)">
            <summary>
            Deserialise Specification object from FPDL
            </summary>
            <param name="fpdl"></param>
        </member>
        <member name="M:FPDL.Pattern.Specification.ToFPDL">
            <summary>
            Serialise Specification object to FPDL
            </summary>
            <returns></returns>
        </member>
        <member name="M:FPDL.Pattern.Specification.ToString">
            <summary>
            String representation of Specification object
            </summary>
            <returns></returns>
        </member>
        <member name="T:FPDL.PolicyParser">
            <summary>
            Read a FPDL Policy document and creata a PolicyObject
            </summary>
        </member>
        <member name="M:FPDL.PolicyParser.Load(System.Xml.Linq.XDocument)">
            <summary>
            Create a DesignObject from a FPDL Deploy document
            </summary>
            <param name="fpdlDoc"></param>
            <returns></returns>
        </member>
        <member name="M:FPDL.PolicyParser.Save(FPDL.Policy.PolicyObject,System.String,System.Boolean)">
            <summary>
            Save a PolicyObject to a FPDL Deploy document
            </summary>
            <param name="deploy"></param>
            <param name="filename"></param>
            <param name="overwrite"></param>
        </member>
        <member name="T:FPDL.Policy.PolicyEntity">
            <summary>
            Entity
            </summary>
        </member>
        <member name="F:FPDL.Policy.PolicyEntity.EntityName">
            <summary>
            Entity friendly name
            </summary>
        </member>
        <member name="F:FPDL.Policy.PolicyEntity.EntityId">
            <summary>
            Entity ID (NETN ID)
            </summary>
        </member>
        <member name="F:FPDL.Policy.PolicyEntity.Publish">
            <summary>
            Entity publish
            </summary>
        </member>
        <member name="M:FPDL.Policy.PolicyEntity.#ctor(System.Xml.Linq.XElement)">
            <summary>
            Construct Entity from FPDL
            </summary>
            <param name="fpdl"></param>
        </member>
        <member name="M:FPDL.Policy.PolicyEntity.FromFPDL(System.Xml.Linq.XElement)">
            <summary>
            Deserialise Entity from FPDL
            </summary>
            <param name="fpdl"></param>
        </member>
        <member name="M:FPDL.Policy.PolicyEntity.ToFPDL">
            <summary>
            Serialise Entity object to FPDL
            </summary>
            <returns></returns>
        </member>
        <member name="T:FPDL.Policy.Federate">
            <summary>
            Federate
            </summary>
        </member>
        <member name="F:FPDL.Policy.Federate.FederateType">
            <summary>
            Federate Type
            </summary>
        </member>
        <member name="F:FPDL.Policy.Federate.FederateName">
            <summary>
            Federate Name
            </summary>
        </member>
        <member name="F:FPDL.Policy.Federate.SecurityOwner">
            <summary>
            Security Owner
            </summary>
        </member>
        <member name="F:FPDL.Policy.Federate.SecurityClassification">
            <summary>
            Security Classification
            </summary>
        </member>
        <member name="F:FPDL.Policy.Federate.SecurityCaveat">
            <summary>
            Security Caveat (optional)
            </summary>
        </member>
        <member name="F:FPDL.Policy.Federate.PhysicalLocation">
            <summary>
            Physical Location
            </summary>
        </member>
        <member name="F:FPDL.Policy.Federate.Description">
            <summary>
            Description (optional)
            </summary>
        </member>
        <member name="F:FPDL.Policy.Federate.Publish">
            <summary>
            Publish (optional)
            </summary>
        </member>
        <member name="F:FPDL.Policy.Federate.Entities">
            <summary>
            Entities (optional)
            </summary>
        </member>
        <member name="M:FPDL.Policy.Federate.#ctor">
            <summary>
            Construct a Federate object
            </summary>
        </member>
        <member name="M:FPDL.Policy.Federate.#ctor(System.Xml.Linq.XElement)">
            <summary>
            Construct a Federate object from FPDL
            </summary>
            <param name="fpdl"></param>
        </member>
        <member name="M:FPDL.Policy.Federate.FromFPDL(System.Xml.Linq.XElement)">
            <summary>
            Deserialise Federate object from FPDL
            </summary>
            <param name="fpdl"></param>
        </member>
        <member name="M:FPDL.Policy.Federate.ToFPDL">
            <summary>
            Serialise Federate object to FPDL
            </summary>
            <returns></returns>
        </member>
        <member name="T:FPDL.Policy.PolicyException">
            <summary>
            PolicyException
            </summary>
        </member>
        <member name="F:FPDL.Policy.PolicyException.ParameterName">
            <summary>
            Parameter Name
            </summary>
        </member>
        <member name="F:FPDL.Policy.PolicyException.EntityIDs">
            <summary>
            Entity IDs
            </summary>
        </member>
        <member name="F:FPDL.Policy.PolicyException.ReleaseStatements">
            <summary>
            Release Statements
            </summary>
        </member>
        <member name="M:FPDL.Policy.PolicyException.#ctor">
            <summary>
            Construct PolicyException object
            </summary>
        </member>
        <member name="M:FPDL.Policy.PolicyException.#ctor(System.Xml.Linq.XElement)">
            <summary>
            Construct PolicyException objext from FPDL
            </summary>
            <param name="fpdl"></param>
        </member>
        <member name="M:FPDL.Policy.PolicyException.FromFPDL(System.Xml.Linq.XElement)">
            <summary>
            Deserialise PolicyException from FPDL
            </summary>
            <param name="fpdl"></param>
        </member>
        <member name="M:FPDL.Policy.PolicyException.ToFPDL">
            <summary>
            Serialise PolicyException to FPDL
            </summary>
            <returns></returns>
        </member>
        <member name="M:FPDL.Policy.PolicyException.ToString">
            <summary>
            String representation of PolicyException
            </summary>
            <returns></returns>
        </member>
        <member name="T:FPDL.Policy.PolicyHlaAttribute">
            <summary>
            Redefinition of HlaAttribute for Policy
            </summary>
            
        </member>
        <member name="F:FPDL.Policy.PolicyHlaAttribute.AttributeName">
            <summary>
            Attribute name
            </summary>
        </member>
        <member name="F:FPDL.Policy.PolicyHlaAttribute.DefaultValue">
            <summary>
            Default Value (optional)
            </summary>
        </member>
        <member name="F:FPDL.Policy.PolicyHlaAttribute.DataType">
            <summary>
            Data Type (required if Default Value set)
            </summary>
        </member>
        <member name="F:FPDL.Policy.PolicyHlaAttribute.ReleaseStatements">
            <summary>
            Release statements for the Attribute
            </summary>
        </member>
        <member name="M:FPDL.Policy.PolicyHlaAttribute.#ctor">
            <summary>
            Construct a PolicyHlaAttribute
            </summary>
        </member>
        <member name="M:FPDL.Policy.PolicyHlaAttribute.#ctor(System.Xml.Linq.XElement)">
            <summary>
            Construct a PolicyHlaAttribute from FPDL
            </summary>
            <param name="fpdl"></param>
        </member>
        <member name="M:FPDL.Policy.PolicyHlaAttribute.FromFPDL(System.Xml.Linq.XElement)">
            <summary>
            Deserialise PolicyHlaAttribute from FPDL
            </summary>
            <param name="fpdl"></param>
        </member>
        <member name="M:FPDL.Policy.PolicyHlaAttribute.ToFPDL">
            <summary>
            Serialise PolicyHlaAttribute to FPDL
            </summary>
            <returns></returns>
        </member>
        <member name="T:FPDL.Policy.PolicyHlaInteraction">
            <summary>
            Redefined HlaInteraction for Policy
            </summary>
        </member>
        <member name="F:FPDL.Policy.PolicyHlaInteraction.InteractionClassName">
            <summary>
            Interaction class name
            </summary>
        </member>
        <member name="F:FPDL.Policy.PolicyHlaInteraction.ReleaseStatements">
            <summary>
            Release Statements
            </summary>
        </member>
        <member name="F:FPDL.Policy.PolicyHlaInteraction.Exceptions">
            <summary>
            Exceptions
            </summary>
        </member>
        <member name="M:FPDL.Policy.PolicyHlaInteraction.#ctor">
            <summary>
            Construct a PolicyHlaInteraction object
            </summary>
        </member>
        <member name="M:FPDL.Policy.PolicyHlaInteraction.#ctor(System.Xml.Linq.XElement)">
            <summary>
            Construct a PolicyHlaInteraction object from FPDL
            </summary>
            <param name="fpdl"></param>
        </member>
        <member name="M:FPDL.Policy.PolicyHlaInteraction.FromFPDL(System.Xml.Linq.XElement)">
            <summary>
            Deserialise a PolicyHlaInteraction object from FPDL
            </summary>
            <param name="fpdl"></param>
            <returns></returns>
        </member>
        <member name="M:FPDL.Policy.PolicyHlaInteraction.ToFPDL">
            <summary>
            Serialise HLA interaction into FPDL
            </summary>
            <returns>FPDL HLA interaction</returns>
        </member>
        <member name="M:FPDL.Policy.PolicyHlaInteraction.ToString">
            <summary>
            String representation of a PolicyHLAInteraction
            </summary>
            <returns></returns>
        </member>
        <member name="T:FPDL.Policy.PolicyHlaObject">
            <summary>
            Redefinition of HlaObject for Policy
            </summary>
        </member>
        <member name="F:FPDL.Policy.PolicyHlaObject.ObjectClassName">
            <summary>
            Object class name
            </summary>
        </member>
        <member name="F:FPDL.Policy.PolicyHlaObject.Attributes">
            <summary>
            Object attributes
            </summary>
        </member>
        <member name="F:FPDL.Policy.PolicyHlaObject.ReleaseStatements">
            <summary>
            Release statements for the Attribute
            </summary>
        </member>
        <member name="M:FPDL.Policy.PolicyHlaObject.#ctor">
            <summary>
            Construct a HlaObject
            </summary>
        </member>
        <member name="M:FPDL.Policy.PolicyHlaObject.#ctor(System.Xml.Linq.XElement)">
            <summary>
            Construct a HlaObject from FPDL
            </summary>
            <param name="fpdl"></param>
        </member>
        <member name="M:FPDL.Policy.PolicyHlaObject.FromFPDL(System.Xml.Linq.XElement)">
            <summary>
            Deserialise HlaObject from FPDL
            </summary>
            <param name="fpdl"></param>
        </member>
        <member name="M:FPDL.Policy.PolicyHlaObject.ToFPDL">
            <summary>
            Serialise HlaObject to FPDL
            </summary>
            <returns>FPDL HLA object</returns>
        </member>
        <member name="M:FPDL.Policy.PolicyHlaObject.ToString">
            <summary>
            String representation of HlaObject
            </summary>
            <returns></returns>
        </member>
        <member name="T:FPDL.Policy.PolicyObject">
            <summary>
            PolicyObject class
            </summary>
        </member>
        <member name="F:FPDL.Policy.PolicyObject.ConfigMgmt">
            <summary>
            ConfigMgmt
            </summary>
        </member>
        <member name="F:FPDL.Policy.PolicyObject.Federate">
            <summary>
            Federate
            </summary>
        </member>
        <member name="M:FPDL.Policy.PolicyObject.#ctor">
            <summary>
            Construct a PolicyObject
            </summary>
        </member>
        <member name="M:FPDL.Policy.PolicyObject.#ctor(System.Xml.Linq.XElement)">
            <summary>
            Construct PolicyObject from FPDL document
            </summary>
            <param name="fpdl"></param>
        </member>
        <member name="M:FPDL.Policy.PolicyObject.FromFPDL(System.Xml.Linq.XElement)">
            <summary>
            Deserialise PolicyObject from FPDL
            </summary>
            <param name="fpdl"></param>
        </member>
        <member name="M:FPDL.Policy.PolicyObject.ToFPDL">
            <summary>
            Serialise PolicyObject to FPDL
            </summary>
            <returns></returns>
        </member>
        <member name="M:FPDL.Policy.PolicyObject.ToString">
            <summary>
            String representation of PolicyObject
            </summary>
            <returns></returns>
        </member>
        <member name="T:FPDL.Policy.PolicyPublish">
            <summary>
            Federate publish
            </summary>
        </member>
        <member name="F:FPDL.Policy.PolicyPublish.Objects">
            <summary>
            Objects to publish
            </summary>
        </member>
        <member name="F:FPDL.Policy.PolicyPublish.Interactions">
            <summary>
            Interactions to publish
            </summary>
        </member>
        <member name="M:FPDL.Policy.PolicyPublish.#ctor(System.Xml.Linq.XElement)">
            <summary>
            Construct a Publish object from FPDL
            </summary>
            <param name="fpdl"></param>
        </member>
        <member name="M:FPDL.Policy.PolicyPublish.FromFPDL(System.Xml.Linq.XElement)">
            <summary>
            Deserialise Publish object from FPDL
            </summary>
            <param name="fpdl"></param>
        </member>
        <member name="M:FPDL.Policy.PolicyPublish.ToFPDL">
            <summary>
            Serialise Publish onject to FPDL
            </summary>
            <returns></returns>
        </member>
        <member name="M:FPDL.Policy.PolicyPublish.ToString">
            <summary>
            String representation of Module object
            </summary>
            <returns></returns>
        </member>
        <member name="T:FPDL.Policy.IReleaseStatement">
            <summary>
            ReleaseStatement Interface
            </summary>
        </member>
        <member name="M:FPDL.Policy.IReleaseStatement.FromFPDL(System.Xml.Linq.XElement)">
            <summary>
            Deserialise from FPDL
            </summary>
            <param name="fpdl"></param>
        </member>
        <member name="M:FPDL.Policy.IReleaseStatement.ToFPDL">
            <summary>
            Serialise to FPDL
            </summary>
            <returns></returns>
        </member>
        <member name="M:FPDL.Policy.IReleaseStatement.ToString">
            <summary>
            String representation
            </summary>
            <returns></returns>
        </member>
        <member name="T:FPDL.Policy.ReleaseStatement">
            <summary>
            Factory method for Release Statements
            </summary>
        </member>
        <member name="M:FPDL.Policy.ReleaseStatement.FromFPDL(System.Xml.Linq.XElement)">
            <summary>
            Create a ReleaseStatement from FPDL
            </summary>
            <param name="fpdl"></param>
            <returns></returns>
        </member>
        <member name="T:FPDL.Policy.ReleaseToGeneric">
            <summary>
            ReleaseToGeneric
            </summary>
        </member>
        <member name="T:FPDL.Policy.ReleaseToGeneric.CaveatType">
            <summary>
            Caveat type
            </summary>
        </member>
        <member name="F:FPDL.Policy.ReleaseToGeneric.CaveatType.permissive">
            <summary>
            Permissive
            </summary>
        </member>
        <member name="F:FPDL.Policy.ReleaseToGeneric.CaveatType.restrictive">
            <summary>
            Restrictive
            </summary>
        </member>
        <member name="F:FPDL.Policy.ReleaseToGeneric.CaveatType.NOT_RELEASABLE">
            <summary>
            NOT Releaseable
            </summary>
        </member>
        <member name="F:FPDL.Policy.ReleaseToGeneric.NotReleasable">
            <summary>
            True if this is a NotReleasableToGeneric statement
            </summary>
        </member>
        <member name="F:FPDL.Policy.ReleaseToGeneric.SecurityOwner">
            <summary>
            Owner
            </summary>
        </member>
        <member name="F:FPDL.Policy.ReleaseToGeneric.SecurityClassification">
            <summary>
            Classification
            </summary>
        </member>
        <member name="F:FPDL.Policy.ReleaseToGeneric.SecurityCaveat">
            <summary>
            Caveat (optional)
            </summary>
        </member>
        <member name="F:FPDL.Policy.ReleaseToGeneric.Caveat">
            <summary>
            Caveat Type
            </summary>
        </member>
        <member name="F:FPDL.Policy.ReleaseToGeneric.SecurityNote">
            <summary>
            Notes
            </summary>
        </member>
        <member name="M:FPDL.Policy.ReleaseToGeneric.#ctor(System.Boolean)">
            <summary>
            Construct ReleaseToGeneric object
            </summary>
        </member>
        <member name="M:FPDL.Policy.ReleaseToGeneric.#ctor(System.Xml.Linq.XElement)">
            <summary>
            Construct ReleaseToGeneric from FPDL
            </summary>
            <param name="fpdl"></param>
        </member>
        <member name="M:FPDL.Policy.ReleaseToGeneric.FromFPDL(System.Xml.Linq.XElement)">
            <summary>
            Deserialise ReleaseToGeneric from FPDL
            </summary>
            <param name="fpdl"></param>
        </member>
        <member name="M:FPDL.Policy.ReleaseToGeneric.ToFPDL">
            <summary>
            Serialise ReleaseToGeneric to FPDL
            </summary>
            <returns></returns>
        </member>
        <member name="M:FPDL.Policy.ReleaseToGeneric.ToString">
            <summary>
            String representation of ReleaseToGeneric
            </summary>
            <returns></returns>
        </member>
        <member name="T:FPDL.Policy.ReleaseToSpecific">
            <summary>
            ReleaseToSpecific
            </summary>
        </member>
        <member name="F:FPDL.Policy.ReleaseToSpecific.NotReleasable">
            <summary>
            True if this is a NotReleasableToSpecific statement
            </summary>
        </member>
        <member name="F:FPDL.Policy.ReleaseToSpecific.FederateName">
            <summary>
            Federate Name
            </summary>
        </member>
        <member name="M:FPDL.Policy.ReleaseToSpecific.#ctor(System.Boolean)">
            <summary>
            Construct ReleaseToSpecific object
            </summary>
            <param name="notReleasable"></param>
        </member>
        <member name="M:FPDL.Policy.ReleaseToSpecific.#ctor(System.Xml.Linq.XElement)">
            <summary>
            Construct ReleaseToSpecific object from FPDL
            </summary>
            <param name="fpdl"></param>
        </member>
        <member name="M:FPDL.Policy.ReleaseToSpecific.FromFPDL(System.Xml.Linq.XElement)">
            <summary>
            Deserialise ReleaseToSpecific object from FPDL
            </summary>
            <param name="fpdl"></param>
        </member>
        <member name="M:FPDL.Policy.ReleaseToSpecific.ToFPDL">
            <summary>
            Serialise ReleaseToSpecific to FPDL
            </summary>
            <returns></returns>
        </member>
        <member name="M:FPDL.Policy.ReleaseToSpecific.ToString">
            <summary>
            String representation of ReleaseToGeneric
            </summary>
            <returns></returns>
        </member>
    </members>
</doc>
